{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBCHDQ,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,uBAAMC,SAXU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAK,OAAGP,GAAH,mBAAiBO,OACrCN,EAAc,MAMlB,UACI,wCACA,uBAAOO,KAAK,OACZC,MAAOT,EACPU,SApBgB,SAACP,GACrBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,c,+BCTlBK,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEmCC,UAAUH,GAF7C,+DAGCI,MAAOF,GAHR,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAIDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MAEXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbxB,kBAiBXM,GAjBW,4CAAF,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OADAN,QAAQC,IAAIc,EAAIC,EAAMV,GAElB,sBAAKc,UAAU,2BAAf,UACG,qBAAKA,UAAU,MAAMC,IAAKf,EAAKgB,IAAKN,IACpC,4BAAIA,QCHFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEZhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAyBtC,OAlBAC,qBAAU,WACNxB,EAASC,GACRxB,MAAK,SAAAgD,GACFC,YAAW,WACP7B,QAAQC,IAAI2B,GACZF,EAAS,CACLf,KAAKiB,EACLJ,SAAQ,MAEb,UAIT,CAACpB,IAKIqB,EDpBuBK,CAAa1B,GAA/Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAEnB,OACI,qCACI,6BAAKpB,IACJoB,GAAS,mBAAGJ,UAAU,mCAAb,wBAET,qBAAKA,UAAU,YAAf,SAGOH,EAAOJ,KAAI,SAAAC,GACP,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEhB5BgB,EAAe,WAAO,IAAD,EAGI3C,mBAAU,CAAC,gBAHf,mBAGvB4C,EAHuB,KAGZ7C,EAHY,KAS9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK6C,EAAWnB,KAAI,SAACT,GACb,OACK,cAAC,EAAD,CAEAA,SAAUA,GADLA,YChB9B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.1b273c2b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react'\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length>2){\r\n            setCategories( categ=>[inputValue,...categ]);\r\n            setInputValue('');\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>search</h2>\r\n            <input type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n};\r\n","\r\nexport const getGifs =async(category)=>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=EH1bjaUi9QsSJkTvShiSeLayi4Ubx9up`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n   \r\n\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            // el signo ? es para preguntar si vienen las imagenes las utilice\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title,url)\r\n    return (\r\n        <div className=\"card animate__backInDown\">\r\n           <img className='gif' src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading&&<p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n             <div className=\"card-grid\">\r\n           \r\n                {\r\n                    images.map(img=>{\r\n                        return(\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs( category )\r\n        .then(imgs=>{\r\n            setTimeout(() => {\r\n                console.log(imgs)\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            }, 500);\r\n           \r\n        })\r\n\r\n    },[category])\r\n\r\n\r\n \r\n    \r\n    return state;\r\n}\r\n","import  React, {useState} from 'react'\r\n\r\nimport {AddCategory} from './components/AddCategory.js'\r\n\r\nimport {GifGrid} from './components/GifGrid.js'\r\nexport const GifExpertApp = () => {\r\n\r\n   \r\n    const [categories,setCategories]= useState( ['Dragon Ball']);\r\n    \r\n    // const handleAdd=()=>{\r\n    //     setCategories([...categories,'nuevo'])\r\n    // }\r\n    \r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n            <ol>\r\n                {categories.map((category)=>{\r\n                    return(\r\n                         <GifGrid \r\n                         key={category}\r\n                         category={category}/>)\r\n                })}    \r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport {GifExpertApp} from './GifExpertApp.js'\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}